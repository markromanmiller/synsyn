% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/synsyn.R
\name{compute_pairs_up_to}
\alias{compute_pairs_up_to}
\title{==== Principles ====}
\usage{
compute_pairs_up_to(
  dta,
  n_todo,
  relate,
  preprocess,
  group_summary,
  ordered,
  unique,
  pb
)
}
\description{
-- Dependencies --
Anything I'd write normally is a dependency for synsyn. This includes and is
not limited to dplyr, tidyr, rlang, dddr, and rbids.
}
\details{
-- Move fast, write shit --
At this stage, I'm writing this for my own use. I can't spend more than
30 seconds thinking through a design decision, especially if I predict how a
"future user" would do it.

-- Sizing --
It is fair to assume the bids metadata will fit in memory, and that any
session will fit in memory. This assumption may be challenged, and can go
either way (perhaps down to pair)

-- Tagging / annotation / semantics of columns
at teh top of each synsyn analyusis, check if all columns are tagged.


==== Open questions ====
- What would a user do with intermediate computation?
  - interactively program a data transformation step?

- Is this appropriate to do mostly in SQL?
  - I mean, to some extent, yes, the idea is to do "as much on small as possible"
  - but I'd be wanting to add in new columns, etc, pretty often, e.g. computing velocity, etc
  - and I don't want people thinking about that??? Or do I?
  - Some stuff would count as "additions" to the sample-record files, like speed
  - but it also could be varying, etc.
  - really the idea would be to specify what to save / append and what not to?
  - rea
}
\keyword{Internal}
